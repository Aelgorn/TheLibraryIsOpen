@model TheLibraryIsOpen.Models.DBModels.Movie
@using TheLibraryIsOpen.Controllers.StorageManagement
@using TheLibraryIsOpen.Models.DBModels
@inject ClientManager cm
@{
    bool signedIn = User.Identity.IsAuthenticated;
    // get clientEmail
    string clientEmail = User.Identity.Name;
    Client client = await cm.FindByEmailAsync(clientEmail);
    bool isAdmin = client.IsAdmin;
}

@{
    bool inStoke = false;
    string str = TempData["AvailableCopies"] as string;
    if (str != null)
    {
        inStoke = (int.Parse(str) > 0 ? true : false);
    }

}

@{
    ViewData["Title"] = "Details";
}
<h2>Details</h2>
<div>
    <h4>Movie</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Director)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Director)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Producers)
        </dt>
        <dd>
            @foreach (var Producer in Model.Producers)
            {
                @(Producer.FirstName + " " + Producer.LastName)<br />
            }
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Actors)
        </dt>
        <dd>
            @foreach (var Actor in Model.Actors)
            {
                @(Actor.FirstName + " " + Actor.LastName)<br />
            }
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Language)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Language)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Subtitles)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Subtitles)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Dubbed)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Dubbed)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.RunTime)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.RunTime)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </dt>
        <dd>
            @Model.ReleaseDate.ToShortDateString()
        </dd>
    </dl>
</div>
<div>
    @if (inStoke)
    {
        <a asp-action="AddToCart(@Model)" class="btn btn-lg btn-warning" asp-route-id="@Model.MovieId"><label class="glyphicon glyphicon-shopping-cart"></label>&nbsp; Add To Cart</a>
    }
</div>
<div style="height: 6px;"></div>
<div>
    @if (isAdmin)
    {
        <a asp-action="Edit" class="btn btn-sm btn-success" asp-route-id="@Model.MovieId"><label class="glyphicon glyphicon-edit"></label>&nbsp; Edit</a>
        <a asp-action="Delete" class="btn btn-sm btn-danger" asp-route-id="@Model.MovieId"><label class="glyphicon glyphicon-trash"></label>&nbsp; Delete</a>
    }

</div>
