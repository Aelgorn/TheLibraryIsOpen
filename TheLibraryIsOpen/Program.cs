using System;
using System.Collections.Generic;
using System.Data.SqlClient;// added for connect to database
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore;
using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.Logging;

namespace TheLibraryIsOpen
{
	public class Program
	{
		public static void Main(string[] args)
		{
			CreateWebHostBuilder(args).Build().Run();
		}

		public static IWebHostBuilder CreateWebHostBuilder(string[] args) =>
			WebHost.CreateDefaultBuilder(args)
				.UseStartup<Startup>();
	}

    public class Client
    {
        public int clientId;
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string EmailAddress { get; set; }
        public string HomeAddress { get; set; }
        public string PhoneNo { get; set; }
        private string Password;
        public bool isAdmin { get; set; }

        public string setPassword( string pw)
        {
            return Password = pw;
        }
        /* Here the constructor assign values to attributes besides clientId.
         * The clientId is generated by database, when insert an entry to the "client" table (assumed it's already & primary key autoincrement).
         * The last id just entered from table would be assigned to clientId for the client object. So that to avoid same id appears when server gets restarted.
        */
        public Client (string firstName, string lastName, string emailAddress, string homeAddress, string phoneNo, string password)
        {
            SqlConnection connection = new SqlConnection("Server=35.236.241.114;Database=river-karma-216821:us-east4:library;Uid=USER_NAME;Password=PASSWORD";))// Here I dont know uid and password.
            SqlCommand addNewClient = new SqlCommand("INSERT into client (FirstName,LastName,EmailAddress,HomeAddress,PhoneNo,Password,isAdmin) VALUES (@FirstName,@LastName,@EmailAddress,@HomeAddress,@PhoneNo,@Password,@isAdmin);");// I assume primary key autoincrement table is created and the name is client.
            addNewClient.Parameters.AddWithValue("@FirstName", firstName);
            addNewClient.Parameters.AddWithValue("@LastName", lastName);
            addNewClient.Parameters.AddWithValue("@EmailAddress", emailAddress);
            addNewClient.Parameters.AddWithValue("@HomeAddress", homeAddress);
            addNewClient.Parameters.AddWithValue("@PhoneNo", phoneNo);
            addNewClient.Parameters.AddWithValue("@Password", password);
            addNewClient.Parameters.AddWithValue("@isAdmin", false);
            try
            {
                connection.Open();
                SqlCommand getTheCurrentID = new SqlCommand("SELECT Max(id) FROM client;");
                clientId = (int)getTheCurrentID.ExecuteScalar();
                connection.Close();
            }
            catch (Exception ex)
            {
                Console.WriteLine("fail to load id");
            }
            FirstName = firstName;
            LastName = lastName;
            EmailAddress = emailAddress;
            HomeAddress = homeAddress;
            PhoneNo = phoneNo;
            Password = password;
            isAdmin = false;
        }

        //verify if the password entered matches
        public bool passwordVerify(string pswd)
        {
            if (pswd.Equals(this.Password))
            {
                return true;
            }
            else
            {
                return false;
            }
        }

        //method to allow someone to register as an admin.Since we will have admin class extends client, is this necessary? 
        public void registerAsAdmin()
        {
            isAdmin = true;
        }

     
        public override string ToString()
        {
            return "Client:\nFirst Name:" + FirstName + "Last Name:" + LastName +"\nID: " + clientId + "\nEmail Address:" + EmailAddress + "\nHome Address:" + HomeAddress + "\nPhone No:" + PhoneNo;
        }
    }
}
